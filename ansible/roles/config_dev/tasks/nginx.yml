---
# - name: Add the user to the docker group
#   shell:
#     cmd: usermod -aG docker {{system_username}}

- name: Install python
  apt:
    name:
      - python3
      - python3-pip
    state: present

- name: Install pip packages
  pip:
    name:
      - docker
      - pyOpenSSL
      - cryptography

- name: Create nginx directory
  file:
    path: "{{cert_location}}"
    state: directory

- name: Ensure private key is present
  community.crypto.openssl_privatekey:
    path: "{{cert_location}}{{cert_name}}.key"
    size: 4096
    mode: 0600
    type: RSA
    
- name: Ensure self-signed cert is present
  community.crypto.x509_certificate:
    path: "{{cert_location}}{{cert_name}}.crt"
    privatekey_path: "{{cert_location}}{{cert_name}}.key"
    provider: selfsigned
    selfsigned_not_after: "+3650d" # this is the default
    mode: 0644

- name: Copy the nginx template configuration
  template:
    src: templates/nginx.j2
    dest: "{{cert_location}}default.conf"

- name: Install nginx docker
  docker_container:
    name: nginx
    image: nginx:latest
    state: started
    restart_policy: unless-stopped
    published_ports:
      - 443:443
      - 80:80

- name: Copy the nginx default configuration from docker
  shell:
    cmd: docker cp nginx:/etc/nginx/conf.d/default.conf {{cert_location}}default.conf.bkp

- name: Copy the new configuration to docker
  shell:
    cmd: docker cp {{cert_location}}default.conf nginx:/etc/nginx/conf.d/default.conf

- name: Copy the cert to docker
  shell:
    cmd: docker cp {{cert_location}}{{item}} nginx:/etc/nginx/{{item}}
  with_items:
    - "{{cert_name}}.key"
    - "{{cert_name}}.crt"

- name: Reload nginx configuration
  shell:
    cmd: "{{item}}"
  with_items:
    - docker exec nginx nginx -t
    - docker exec nginx nginx -s reload